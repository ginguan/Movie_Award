{"version":3,"sources":["components/Search.js","components/MovieInfo.js","components/NominatedList.js","App.js","reportWebVitals.js","index.js"],"names":["handleClick","e","target","select","Search","props","class","for","size","icon","faSearch","onFocus","className","id","rows","placeholder","value","searchValue","onChange","event","setSearchValue","console","log","onChangeSearch","MovieInfo","isNominated","movie","nominated","nominatedMovies","length","forEach","nominatedMovie","imdbID","defaultOptions","loop","autoplay","animationData","emptySearchAnimation","rendererSettings","preserveAspectRatio","movieList","items","map","moive","button","whileHover","scale","whileTap","Row","Col","Popup","trigger","Image","alt","src","Poster","position","Header","Production","Content","Rated","Title","Year","Button","disabled","onClick","setNominatedMovie","active","Container","isLoaded","error","options","height","width","Spinner","animation","variant","NominatedList","handleRemoveItem","parent","parentElement","classList","remove","getAttribute","addEventListener","filter","item","animationedCallback","emptyBoxAnimation","imdbid","App","useState","setError","setIsLoaded","setItems","storage","window","localStorage","getItem","JSON","parse","reachFive","setReachFive","shareUrl","title","useEffect","fetch","then","res","json","result","Response","Error","setItem","stringify","Alert","faSmileWink","style","marginTop","fontWeight","content","basic","TwitterShareButton","url","TwitterIcon","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8ab8ee4.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './Search.css';\n\nconst handleClick = (e) => {\n    e.target.select();\n};\n\nfunction Search(props){\n    const onChangeSearch = (event) => {\n        props.setSearchValue(event.target.value);\n        console.log(event.target.value)\n    }\n    return (\n        <div class=\"search-container mb-3\">\n           <h3 class = \"search-results\">Search Movie Titles</h3>\n           <div class = \"label-input \">\n\n            <label for=\"inputType \"><FontAwesomeIcon size = '2x' icon={faSearch} /></label>\n            <input onFocus={handleClick} className=\"search-results form-control\" id=\"searchInput\" rows=\"2\" placeholder=\"Enter Movie Title\" value={props.searchValue} onChange={event => onChangeSearch(event)}></input>\n\n           </div>\n\n\n        </div>\n\n    )\n\n}\n\n\nexport default Search;\n","import React from 'react';\nimport { Button, Image, Row, Col, Spinner, Container } from 'react-bootstrap';\nimport { Popup } from 'semantic-ui-react';\nimport { motion } from \"framer-motion\";\nimport './MovieInfo.css';\nimport './Lottie.css';\nimport Lottie from 'react-lottie';\nimport * as emptySearchAnimation from \"../images/empty_search.json\";\n\n\nconst MovieInfo = (props) =>{\n\n    const isNominated = (movie)=>{\n    let nominated = false;\n    if(props.nominatedMovies.length ===5){\n        //window.alert(\"sometext\");\n        return true;\n    }\n    props.nominatedMovies.forEach(nominatedMovie => {\n        if (nominatedMovie.imdbID === movie.imdbID) {\n          nominated = true;\n        }\n\n      })\n      return nominated;\n}\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: emptySearchAnimation.default,\n        rendererSettings: {\n            preserveAspectRatio: \"xMidYMid slice\"\n        }\n    };\nconst movieList = (\n    props.items ?\n    <div>\n       <ul className=\"list-group movie-info\">\n        {props.items.map(moive => (\n\n          <motion.button whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}  key={moive.imdbID} className=\"list-group-item \">\n            <Row>\n              <Col>\n              <Popup trigger=\n                {<Image alt=\"poster\" src={moive.Poster} alt=\"poster\" />}\n                position = \"left top\">\n              <Popup.Header>{moive.Production}\n              </Popup.Header>\n                <Popup.Content>\n                {moive.Rated}\n                </Popup.Content>\n                </Popup>\n\n              </Col>\n              <Col className=\"\">\n                <p> {moive.Title}</p>\n                <p> {moive.Year}</p>\n\n                <Button\n                  className=\"btn btn-warning\"\n                  value = \"Nominate\"\n                  disabled={isNominated(moive)} onClick={() => {\n                      props.setNominatedMovie([...props.nominatedMovies, moive]);\n                      }} active>\n                          Nominate\n                </Button>\n              </Col>\n            </Row>\n          </motion.button>\n        ))}\n      </ul>\n      </div>\n      : ' ')\n\n\n      return (\n        <div className=\"\">\n          <Container >\n            <Row  className=\"d-flex p-2\">\n                {<span className=\"result-text d-flex justify-content-center\">Search Results</span>}\n            </Row>\n            <Row className=\"d-flex p-2\">\n              {!props.isLoaded && props.error !== null &&\n              <div className=\"text-center lottie\">\n                  <div className=\"status\" >\n                      <Lottie options={defaultOptions}  height={200} width={200}/>\n                  </div>\n              </div>}\n              { props.error === null && !props.isLoaded &&\n                <Spinner className=\"loader\" animation=\"border\" variant=\"warning\" ></Spinner>}\n              {props.isLoaded && movieList}\n            </Row>\n          </Container>\n    </div>\n\n      );\n    }\n\nexport default MovieInfo;\n","import React from 'react';\nimport {Button, Container, Row} from 'react-bootstrap';\nimport './NominatedList.css';\nimport './Lottie.css';\nimport Lottie from 'react-lottie';\nimport * as emptyBoxAnimation from \"../images/empty_box.json\";\nimport faSmileWink from '@fortawesome/free-solid-svg-icons';\nfunction NominatedList(props) {\n\n    const animationedCallback = (imdbID) => {\n        props.setNominatedMovie(props.nominatedMovies.filter(item => item.imdbID !== imdbID))\n    }\n    const handleRemoveItem = (e) => {\n        var target = e.target;\n        var parent = target.parentElement;\n        parent.classList.remove(\"new-item\");\n        const imdbID = target.getAttribute(\"imdbid\");\n        parent.addEventListener(\"animationend\", animationedCallback(imdbID), false);\n        // parent.classList.add(\"removed-item\");\n    }\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: emptyBoxAnimation.default,\n        rendererSettings: {\n            preserveAspectRatio: \"xMidYMid slice\"\n        }\n    };\n    console.log(\"props.nominatedMovies\",props.nominatedMovies)\n    return (\n        <Container>\n        <Row  className=\"d-flex p-2\">\n                {<span className=\"result-text d-flex justify-content-center\">Nominated Movies</span>}\n            </Row>\n            <Row>\n        <div className=\"noimated-info-container\">\n            {props.nominatedMovies.length ?\n                <div>\n                    <div><ul className=\"list-group  noimated-info\" >\n                        <div className=\"noimated-info\">\n                            {\n                                props.nominatedMovies.map(nominatedMovie => (\n                                    <li key={nominatedMovie.imdbID} className=\"list-group-item d-flex justify-content-between\" >\n                                        <p className=\"p-0 m-0\"> {nominatedMovie.Title}({nominatedMovie.Year})</p>\n                                        <Button className=\"ml-4 button-delete\" variant=\"danger\" imdbid={nominatedMovie.imdbID} onClick={handleRemoveItem} active >\n                                            Remove\n                                        </Button>\n                                    </li>\n                                ))}</div>\n\n                    </ul>\n                    </div>\n                    </div>:\n                <div className=\"text-center lottie\">\n                <div className=\"status\" >\n                <Lottie options={defaultOptions}  height={200} width={200}/>\n                </div>\n                </div>\n\n                    }\n        </div>\n        </Row>\n        </Container>\n    );\n};\n\nexport default NominatedList;\n","import React, {useEffect, useState} from 'react';\nimport {Alert, Col, Container, Row} from 'react-bootstrap'\nimport './App.css';\nimport Search from './components/Search';\nimport MovieInfo from './components/MovieInfo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NominatedList from './components/NominatedList';\nimport {Popup} from 'semantic-ui-react';\nimport {\n    FacebookIcon,\n    FacebookShareButton,\n    LinkedinIcon,\n    LinkedinShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n} from \"react-share\";\nimport {faSmileWink} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [nominatedMovies, setNominatedMovie] = useState(() => {\n    const storage = window.localStorage.getItem(0);\n    return storage !== null\n      ? JSON.parse(storage)\n      : [];\n  });\n  const [reachFive, setReachFive] = useState(false)\n  const [searchValue, setSearchValue] = useState(\"Blackpink\");\n  const shareUrl = \"https://ginguan.github.io/Movie_Award/\"\n  const title = 'Movie Award';\n\n  useEffect(() => {\n    setItems(null);\n    setError(null);\n    setIsLoaded(false);\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=39f52195&plot=full`)\n      .then(\n        res => res.json()\n      .then(\n        (result) => {\n          if (result.Response === \"True\") {\n            setItems(result.Search);\n            setIsLoaded(true);\n            console.log(result)\n          }\n          else {\n            setIsLoaded(false);\n            setError(result.Error);\n          }\n        }\n      ))\n  }, [searchValue])\n\n  useEffect(() => {\n    window.localStorage.setItem(0, JSON.stringify(nominatedMovies));\n    if (nominatedMovies.length === 5)\n      setReachFive(true);\n\n    else\n      setReachFive(false);\n  }, [nominatedMovies])\n\n  return (\n\n\n\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Search searchValue={searchValue} setSearchValue={setSearchValue}/>\n        </Row>\n        <Row>\n          <Col>\n          <MovieInfo items={items} setItems={setItems} nominatedMovies={nominatedMovies} setNominatedMovie={setNominatedMovie} isLoaded={isLoaded} error={error} />\n\n          </Col>\n          <Col>\n              <div>\n                  {reachFive?\n                      <Alert variant=\"danger\">\n                          <FontAwesomeIcon icon={faSmileWink} />\n                           Sorry, Only 5 nominations can be added.\n                  </Alert>:''}\n              </div>\n          <NominatedList nominatedMovies={nominatedMovies} setNominatedMovie={setNominatedMovie} />\n            <div style = {{marginTop:15, fontWeight: \"bold\"}}> Share:\n              <Popup content='Share via Twitter' basic position='bottom center'\n                     trigger={\n                       <TwitterShareButton className=\"share-btn\" url={shareUrl} title = {title}>\n                         <TwitterIcon size={32} round={true} />\n                       </TwitterShareButton>\n                     } />\n              <Popup content='Share via Facebook' basic position='bottom center'\n                     trigger={\n                       <FacebookShareButton className=\"share-btn\" url={shareUrl}  title = {title}>\n                         <FacebookIcon size={32} round={true} />\n                       </FacebookShareButton>\n                     } />\n              <Popup content='Share via Linkedin' basic position='bottom center'\n                     trigger={\n                       <LinkedinShareButton className=\"share-btn\" url={shareUrl}  title = {title}>\n                         <LinkedinIcon size={32} round={true} />\n                       </LinkedinShareButton>\n                     } />\n            </div>\n          </Col>\n\n        </Row>\n        <Row>\n\n\n\n        </Row>\n\n      </Container>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}