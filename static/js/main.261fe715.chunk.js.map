{"version":3,"sources":["components/Search.js","components/MovieInfo.js","components/NominatedList.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","class","for","size","icon","faSearch","className","id","rows","placeholder","value","searchValue","onChange","event","setSearchValue","target","console","log","onChangeSearch","MovieInfo","isNominated","movie","nominated","nominatedMovies","length","forEach","nominatedMovie","imdbID","movieList","items","map","moive","button","whileHover","scale","whileTap","Row","Col","Popup","trigger","Image","alt","src","Poster","position","Header","Production","Content","Rated","Title","Year","Button","disabled","onClick","setNominatedMovie","active","Container","isLoaded","error","Spinner","animation","variant","NominatedList","handleRemoveItem","e","parent","parentElement","classList","remove","getAttribute","addEventListener","filter","item","animationedCallback","imdbid","App","useState","setError","setIsLoaded","setItems","storage","window","localStorage","getItem","JSON","parse","setReachFive","useEffect","fetch","then","res","json","result","Response","Error","setItem","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.261fe715.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport './Search.css';\n\nfunction Search(props){\n    const onChangeSearch = (event) => {\n        props.setSearchValue(event.target.value);\n        console.log(event.target.value)\n    }\n    return (\n        <div class=\"search-container mb-3\">\n           <h3 class = \"search-results\">Search Movie Titles</h3>\n           <div class = \"label-input \">\n\n            <label for=\"inputType \"><FontAwesomeIcon size = '2x' icon={faSearch} /></label>\n            <input className=\"search-results form-control\" id=\"searchInput\" rows=\"2\" placeholder=\"Enter Movie Title\" value={props.searchValue} onChange={event => onChangeSearch(event)}></input>\n \n           </div>\n            \n            \n        </div>\n\n    )\n   \n}\n\n\nexport default Search;","import React from 'react';\nimport { Button, Image, Row, Col, Spinner, Container } from 'react-bootstrap';\nimport { Popup } from 'semantic-ui-react';\nimport { motion } from \"framer-motion\";\nimport './MovieInfo.css';\n\nconst MovieInfo = (props) =>{\n    //defuault\n    const isNominated = (movie)=>{\n    let nominated = false;\n    if(props.nominatedMovies.length ===5){\n        //window.alert(\"sometext\");\n        return true;\n    }\n    props.nominatedMovies.forEach(nominatedMovie => {\n        if (nominatedMovie.imdbID === movie.imdbID) {\n          nominated = true;\n        }\n      })\n      return nominated;\n}\nconst movieList = (\n    props.items ?\n    <div> \n       <ul className=\"list-group movie-info\">\n        {props.items.map(moive => (\n\n          <motion.button whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}  key={moive.imdbID} className=\"list-group-item \">\n            <Row>\n              <Col>\n              <Popup trigger=\n                {<Image alt=\"poster\" src={moive.Poster} alt=\"poster\" />}\n                position = \"left top\">\n              <Popup.Header>{moive.Production}\n              </Popup.Header>\n                <Popup.Content>\n                {moive.Rated}\n                </Popup.Content>\n                </Popup>\n\n              </Col>\n              <Col className=\"\">\n                <p> {moive.Title}</p>\n                <p> {moive.Year}</p>\n\n                <Button\n                  className=\"btn btn-warning\"\n                  value = \"Nominate\" \n                  disabled={isNominated(moive)} onClick={() => { \n                      props.setNominatedMovie([...props.nominatedMovies, moive]);\n                      }} active>\n                          Nominate\n                </Button>\n              </Col>\n            </Row>\n          </motion.button>\n        ))}\n      </ul>\n      </div>\n      : ' ')\n  \n      \n      return (\n        <div className=\"\">\n          <Container >\n            <Row  className=\"d-flex p-2\">\n                {<span className=\"result-text d-flex justify-content-center\">Search Results</span>}\n            </Row>\n            <Row className=\"d-flex p-2\">\n              {!props.isLoaded && props.error !== null && <p className=\"no-info\">Sorry, No Movies Available</p>}\n              { props.error === null && !props.isLoaded &&\n                <Spinner className=\"loader\" animation=\"border\" variant=\"warning\" ></Spinner>}\n              {props.isLoaded && movieList}\n            </Row>\n          </Container>\n    </div>\n    \n      );\n    }\n\nexport default MovieInfo;","import React from 'react';\nimport { Button, Row, Col, Container } from 'react-bootstrap';\nimport { motion } from \"framer-motion\";\nimport './NominatedList.css';\nfunction NominatedList(props) {\n\n    const animationedCallback = (imdbID) => {\n        props.setNominatedMovie(props.nominatedMovies.filter(item => item.imdbID !== imdbID))\n    }\n    const handleRemoveItem = (e) => {\n        var target = e.target;\n        var parent = target.parentElement;\n        parent.classList.remove(\"new-item\");\n        const imdbID = target.getAttribute(\"imdbid\");\n        parent.addEventListener(\"animationend\", animationedCallback(imdbID), false);\n        // parent.classList.add(\"removed-item\");\n    }\n    return (\n        <Container>\n        <Row  className=\"d-flex p-2\">\n                {<span className=\"result-text d-flex justify-content-center\">Nominated Movies</span>}\n            </Row>\n            <Row>\n        <div className=\"noimated-info-container\">\n            {props.nominatedMovies ?\n                <ul className=\"list-group  noimated-info\" >\n\n                    <div className=\"noimated-info\">                    \n                        {\n                        props.nominatedMovies.map(nominatedMovie => (\n\n                        <li  key={nominatedMovie.imdbID} className=\"list-group-item d-flex justify-content-between\" >\n                            <p className=\"p-0 m-0\"> {nominatedMovie.Title}({nominatedMovie.Year})</p>\n                            <Button className=\"ml-4 button-delete\" variant=\"danger\" imdbid={nominatedMovie.imdbID} onClick={handleRemoveItem} active >\n                                Remove\n                                </Button>\n                        </li>\n                    ))}</div>\n\n                </ul>: <p>Waiting for nomination...</p>\n                    }\n        </div>\n        </Row>\n        </Container>\n    );\n};\n\nexport default NominatedList;","import React, { useState, useEffect } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap'\nimport './App.css';\nimport Search from './components/Search';\nimport MovieInfo from './components/MovieInfo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NominatedList from './components/NominatedList';\n\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [nominatedMovies, setNominatedMovie] = useState(() => {\n    const storage = window.localStorage.getItem(0);\n    return storage !== null\n      ? JSON.parse(storage)\n      : [];\n  });\n  const [reachFive, setReachFive] = useState(false)\n  const [searchValue, setSearchValue] = useState(\"Blackpink\");\n\n  useEffect(() => {\n    setItems(null);\n    setError(null);\n    setIsLoaded(false);\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey={YourKey}&plot=full`)\n      .then(\n        res => res.json()\n      .then(\n        (result) => {\n          if (result.Response === \"True\") {\n            setItems(result.Search);\n            setIsLoaded(true);\n            console.log(result)\n          }\n          else {\n            setIsLoaded(false);\n            setError(result.Error);\n          }\n        }\n      ))\n  }, [searchValue])\n\n\n  // const clickFB=()=>{\n  //   FB.ui({\n  //     method: 'share',\n  //     href: 'https://developers.facebook.com/docs/',\n  //   }, function(response){});\n  // }\n  useEffect(() => {\n    window.localStorage.setItem(0, JSON.stringify(nominatedMovies));\n    if (nominatedMovies.length === 5)\n      setReachFive(true);\n    else\n      setReachFive(false);\n  }, [nominatedMovies])\n\n  return (\n\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Search searchValue={searchValue} setSearchValue={setSearchValue}/>\n        </Row>\n        <Row>\n          <Col>\n          <MovieInfo items={items} setItems={setItems} nominatedMovies={nominatedMovies} setNominatedMovie={setNominatedMovie} isLoaded={isLoaded} error={error} />\n\n          </Col>\n          <Col>\n          <NominatedList nominatedMovies={nominatedMovies} setNominatedMovie={setNominatedMovie} />\n\n          </Col>\n\n        </Row>\n        <Row>\n\n        </Row>\n\n\n      </Container>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}